name: Cursor Utilization → Port

on:
  schedule:
    - cron: '15 2 * * *' # daily at 02:15 UTC
  workflow_dispatch:
    inputs:
      mode:
        description: 'daily or backfill'
        type: choice
        required: true
        default: daily
        options: [daily, backfill]
      days:
        description: 'Number of days to process (UTC)'
        required: true
        default: '1'

permissions:
  contents: read

concurrency:
  group: cursor-utilization-${{ github.ref }}
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      # Required
      X_CURSOR_API_KEY: ${{ secrets.X_CURSOR_API_KEY }}
      PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
      PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
      ORG_IDENTIFIER: ${{ secrets.ORG_IDENTIFIER }}
      # Optional overrides (otherwise defaults in code)
      PORT_BASE_URL: ${{ vars.PORT_BASE_URL }}
      PORT_AUTH_URL: ${{ vars.PORT_AUTH_URL }}
      PORT_BULK_UPSERT_URL: ${{ vars.PORT_BULK_UPSERT_URL }}
      TIMEZONE: UTC
      DRY_RUN: 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run daily (scheduled)
        if: ${{ github.event_name == 'schedule' }}
        run: python -m src.main --mode daily --days 1

      - name: Run daily (dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.mode == 'daily' }}
        run: python -m src.main --mode daily --days ${{ inputs.days }}

      - name: Run backfill (dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.mode == 'backfill' }}
        run: python -m src.main --mode backfill --days ${{ inputs.days }}

name: Cursor Utilization → Port

on:
  schedule:
    - cron: '15 2 * * *' # daily at 02:15 UTC
  workflow_dispatch:
    inputs:
      mode:
        description: 'daily or backfill'
        required: false
        default: 'daily'
      days:
        description: 'number of days to process'
        required: false
        default: '1'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: Run ingestion
        env:
          X_CURSOR_API_KEY: ${{ secrets.X_CURSOR_API_KEY }}
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
          PORT_BASE_URL: ${{ vars.PORT_BASE_URL || 'https://api.getport.io' }}
          PORT_AUTH_URL: ${{ vars.PORT_AUTH_URL || 'https://api.getport.io/v1/auth/access_token' }}
          PORT_BULK_UPSERT_URL: ${{ vars.PORT_BULK_UPSERT_URL || 'https://api.getport.io/v1/bulk/entities' }}
          ORG_IDENTIFIER: ${{ vars.ORG_IDENTIFIER }}
          TIMEZONE: UTC
          LOOKBACK_DAYS: 1
          DRY_RUN: false
        run: |
          source .venv/bin/activate
          python -m src.main --mode "${{ inputs.mode || 'daily' }}" --days "${{ inputs.days || '1' }}"


